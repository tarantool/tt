name: publish

on:
  push:
    branches: [master]
    tags: ['*']

env:
  GO_VERSION: '1.18'

jobs:
  create-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Mage
        run: |
          git clone https://github.com/magefile/mage
          cd mage
          go run bootstrap.go

      - name: Build OpenSSL 3.0
        run: |
          wget https://github.com/openssl/openssl/releases/download/openssl-3.0.8/openssl-3.0.8.tar.gz
          tar -xvf openssl-3.0.8.tar.gz
          cd openssl-3.0.8/
          ./Configure --prefix=${GITHUB_WORKSPACE}/openssl no-shared
          make && make install

      # These scripts will be picked up while building packages with goreleaser.
      - name: Generate ZSH and Bash completion scripts
        run: |
          mage build
          ./tt completion bash > tt-completion.bash
          ./tt completion zsh > tt-completion.zsh

      - name: Setup GoReleaser
        run: |
          curl -O -L https://github.com/goreleaser/goreleaser/releases/download/v1.12.3/goreleaser_1.12.3_amd64.deb
          sudo dpkg -i goreleaser_1.12.3_amd64.deb
          rm goreleaser_1.12.3_amd64.deb

      - name: Set GoReleaser flags
        id: set-goreleaser-flags
        run: |
          if ${{ startsWith(github.ref, 'refs/tags') }} ; then
            echo "::set-output name=GORELEASER_FLAGS::--rm-dist --skip-validate"
          else
            echo "::set-output name=GORELEASER_FLAGS::--rm-dist --snapshot"
          fi

      - name: Build packages
        env:
          CGO_LDFLAGS: "-L${{ env.GITHUB_WORKSPACE }}/openssl/lib64"
          CGO_CFLAGS: "-I${{ env.GITHUB_WORKSPACE }}/openssl/include"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          goreleaser release ${{ steps.set-goreleaser-flags.outputs.GORELEASER_FLAGS }}

      - name: Upload packages artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: dist

  publish-s3:
    needs: create-packages
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@master

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Mage
        run: |
          git clone https://github.com/magefile/mage
          cd mage
          go run bootstrap.go

      - name: Download packages artifacts
        uses: actions/download-artifact@v2
        with:
          name: packages
          path: dist

      - name: Publish packages to RWS
        env:
          RWS_URL_PART: https://rws.tarantool.org/release/modules
          RWS_AUTH: ${{ secrets.RWS_AUTH }}
        run: mage publishRWS
